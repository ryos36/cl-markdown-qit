markdown をちゃんと考える

# title
...
...
...

とあるのは # title で始まるブロックであると考える。
ブロックの終端は次の # で始まる行を発見するまで
ただし、``` から ``` をスキップしなければならない

これをブロックとして :div を返す

# で始まるブロックは更に入れ子にブロックをつくる。

# title 自身がブロックで :h1 というブロックである。
次に
...
...
と連続している場合もブロック

``` ではじまり ``` で終わるコードもブロック

- で始まるのもブロック

ブロックは入れ子にならない（なりにくい構造にする）
=============================================================================
ちょっと拡張しよう。=> とおもったけど却下。
#XYZ>
XYZ
を明示的にブロックにして見よう。XYZ は任意の文字列

#XYZ> :option
XYZ
これだとオプションを与えることが出来る。

# title
...
...

は
#XYZ> :title title
...
...
XYZ

としよう。

こうすると入れ子。
#XYZ> :title title
#ABC>
...
...
ABC
#DEF>
...
...
DEF
XYZ

これだとかなりめんどくさいので
次のも許そう。

#( :title title
#(
...
...
#)
#(
...
...
#)
#)

これもゆるそう。この場合　id に xyz が入るとしよう。
#XYZ> :title title
#(
...
...
#)
#(
...
...
#)
XYZ

めんどくさいから(markdown の流儀にのっとって)
#XYZ> :title title
...
...

...
...
XYZ
は同じとしよう
